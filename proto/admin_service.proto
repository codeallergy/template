// Copyright (c) 2022-2023, Zander Schwid & Co. LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/api/annotations.proto";

option go_package = "pkg/pb";
option java_multiple_files = true;
option java_package = "com.codeallergy";
option java_outer_classname = "LightTemplateProtos";
option objc_class_prefix = "LTP";

import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "SiteService";
        version: "1.0";
        contact: {
            name: "SiteService";
            url: "https://github.com/codeallergy/template";
            email: "zander@schwid.com";
        };
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    consumes: "application/octet-stream";
    produces: "application/json";
    produces: "application/octet-stream";
};

package lighttemplate;


//
//  AdminService
//

service AdminService {

    //
    // Admin commands
    //
    rpc AdminRun(Command) returns (CommandResult) {
        option (google.api.http) = {
            put: "/api/admin/command"
            body: "*"
        };
    }

}

message Command {
    string  command = 1;
    repeated string args = 2;
}

message CommandResult {
    string  content = 1;
}
